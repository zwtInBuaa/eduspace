export const defaultGuideInfo = `
欢迎使用 EduCodingSpace 平台！
在使用平台过程中，遇到问题可以及时向教师反馈，祝你学习顺利！
点击右上角问号可以查看用户指引。
`;

export const loginGuideInfo = defaultGuideInfo;

const guide = `
欢迎使用 EduCodingSpace 交互学习！
1. 首先在右侧代码块内完成代码填空
2. 点击左侧“提交代码”按钮
3. 点击左侧“单步运行”或“全部运行”按钮
`;

export const binarySearchGuideInfo =
  guide +
  `
二分查找专题：
1. 黄色代表二分查找的左右边界 left 和 right，红色代表 mid。
2. 查找成功会变为绿色，查找失败或者陷入死循环会变为黑色。
3. 用户可以在填空栏适当修改代码的初始变量和运行逻辑。

注意事项：
1. 二分查找的数组需要有序，数组长度需要<=15，数组元素需要全为整数，数组元素限制在(-500,500)之间。
`;

export const sortGuideInfo =
  guide +
  `
排序专题：
1. 右侧下拉菜单可以选择不同排序算法。
2. 用户可以在填空栏适当修改代码的初始变量和运行逻辑。
3. 每步中可以看到交换的过程。
4. 前端仅渲染数组前15项

在快速排序中，各颜色有如下含义:
1. 红色(red): 表示在这一轮迭代中，该元素被选为枢纽元素。
2. 浅蓝色(lightblue): 表示某轮参与迭代的所有元素。
3. 黑色(black): 在某轮迭代中小于枢纽元素的元素，需要摆放到枢纽元素的左侧。
4. 粉色(pink): 在某轮迭代中大于枢纽元素的元素，需要摆放到枢纽元素的右侧。
5. 白色(white): 表示这轮不参与迭代的所有元素。
6. 绿色(green): 适用于所有排序算法，表示列表已经有序，排序已经完成，此时所有元素呈现绿色。

注意事项：
1. 参与排序的数组长度需要<=15，数组元素需要全为整数，数组元素限制在(-500,500)之间。
`;

export const graphGuideInfo =
  guide +
  `
树与图专题：
1. 右侧下拉菜单可以选择不同树/图算法。
2. 图节点可以拖动，以便你看清图中重叠的部分。
3. 鼠标悬停在边或节点上可以放大元素。
4. 用户可以在填空栏适当修改代码的初始变量和运行逻辑。
5. 用户可以点击编辑图边按钮对初始图进行修改。
6. 自环和重边会自动忽略
7. 调整浏览器窗口大小后，请刷新页面更新图的大小

在所有的图算法中，各颜色有如下含义:
1. gray(灰色): 节点/边颜色为gray时表示该算法尚未发现该边/节点。
2. lightblue(浅蓝色): 节点为lightblue表示该节点正在被处理，边为lightblue表示该边正在被遍历中。
3. steelblue(深蓝色): 节点为steelblue表示改节点已被处理完成，边为steelblue表示该边已被处理完成或被选中(如最小生成树算法)。
4. green(绿色): 只出现在prim算法中，当边为绿色表示该边处于安全边集合中。

注意事项：
1. 图与树算法不支持任何的自环和重复边。
`;

export const customGuideInfo =
  guide +
  `
自定义算法：
1. 仅支持python自带库
2. 注意python不要混用tab与空格
3. 如果编辑器出现特殊颜色提示，请检查括号是否匹配以及代码风格是否规范
4. 由于服务器配置限制，自定义算法支持的内存较小，若出现“容器错误 137”则请减少内存使用。
`;
